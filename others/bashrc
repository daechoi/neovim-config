
export TERM=screen-256color
export EDITOR=vim

# Disable terminal flow control
stty -ixon

# tmux
source $HOME/.vim/others/bash_completion_tmux.sh

export DEBFULLNAME="Esa-Matti Suuronen"
export DEBEMAIL="esa-matti.suuronen@opinsys.fi"

# Bundle helper for ruby development
function be {
  bundle exec "$@"
}

## put to ~/.bashrc if in use
# if [ -x $(which keychain) ] ; then
#     keychain --nogui -q -Q id_rsa
#         . ~/.keychain/`uname -n`-sh
# fi

# Restore keychain
alias keychain-enable='keychain --nogui -q -Q id_rsa && . ~/.keychain/`uname -n`-sh'

alias ircproxy='ssh -t jyulakka ssh -t melmacian.net "tmux att -d -t irc"'

if [ -d ~/.vim/bin ] ; then
    PATH=~/.vim/bin:"${PATH}"
fi

if [ -d ~/bin ] ; then
    PATH=~/bin:"${PATH}"
fi



# Thanks to https://gist.github.com/634750

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\e[0m\]"

function generate_git_bar {
  git_status="$(git status 2> /dev/null)"
  branch_pattern="^# On branch ([^${IFS}]*)"
  detached_branch_pattern="# Not currently on any branch"
  remote_pattern="# Your branch is (.*) of"
  diverge_pattern="# Your branch and (.*) have diverged"
  detached_at_pattern="^# HEAD detached at ([^${IFS}]*)"

  if [[ ${git_status}} =~ "Changed but not updated" ]]; then
    flags="${RED}?" # Old git???
  fi

  if [[ ${git_status}} =~ "Untracked files" ]]; then
    flags="${flags}${RED}!"
  fi

  if [[ ${git_status}} =~ "Changes not staged for commit" ]]; then
    flags="${flags}${RED}⚡"
  fi

  if [[ ${git_status}} =~ "Changes to be committed" ]]; then
    flags="${flags}${RED}√"
  fi

  if [[ ${git_status}} =~ "Unmerged paths" ]]; then
    flags="${flags}${RED}≈"
  fi

  if [ "$(git stash list)" ]; then
    flags="${flags}${RED}˷"
  fi

  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      flags="${flags}${YELLOW}↑"
    else
      flags="${flags}${YELLOW}↓"
    fi
  fi

  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    flags="${flags}${YELLOW}↕"
  fi

  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch="${BLUE}${BASH_REMATCH[1]}"
  elif [[ ${git_status} =~ ${detached_branch_pattern} ]]; then
    branch="${RED}NO BRANCH"
  elif [[ ${git_status} =~ ${detached_at_pattern} ]]; then
    branch="${RED}${BASH_REMATCH[1]}"
  fi


  if [ "${flags}" ]; then
    flags="${COLOR_NONE}|${flags}"
  fi

  hash=$(git rev-parse HEAD | head -c 7)

  echo "${COLOR_NONE}(${branch}${COLOR_NONE}|${YELLOW}${hash}${flags}${COLOR_NONE})"
}

function stopped_jobs(){
  if [[ "$(jobs)" =~ "Stopped" ]]; then
    echo "${COLOR_NONE}${RED}⌚ "
  fi
}

function prompt_func() {

  # Use red # as prompt char when root
  if [ $(id -u) -eq 0 ]; then
    prompt_char="${COLOR_NONE}# "
    host="${RED}\u@\h"
  else
    prompt_char="${COLOR_NONE}$ "
    host="${GREEN}\u@\h"
  fi

  titlebar="${host} ${YELLOW}\w"

  git rev-parse --git-dir > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    # In Git repo
    git_bar="$(generate_git_bar)"
  else
    git_bar=""
  fi

  PS1="${titlebar}\n$(stopped_jobs)${git_bar}${prompt_char}"
  echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"

}

PROMPT_COMMAND=prompt_func
